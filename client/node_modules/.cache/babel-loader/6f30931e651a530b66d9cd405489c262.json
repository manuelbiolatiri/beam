{"ast":null,"code":"import axios from \"axios\";\nimport { getAccessToken } from \"../helpers\";\n\nconst axiosRequest = (requestType, appendUrl, payload) => {\n  const baseUrl = `https://flenjodating.herokuapp.com/`; //prone to change based on env\n\n  const requestUrl = `${baseUrl}${appendUrl}`;\n  let config;\n\n  if (getAccessToken()) {\n    config = {\n      headers: {\n        \"Content-type\": \"Application/json\",\n        Authorization: `Bearer ${getAccessToken()}`\n      }\n    };\n  } else {\n    config = {\n      headers: {\n        \"Content-type\": \"Application/json\"\n      }\n    };\n  }\n\n  const axiosGet = () => {\n    return new Promise((resolve, reject) => {\n      axios.get(requestUrl).then(res => {\n        resolve(res);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  };\n\n  const axiosPost = () => {\n    return new Promise((resolve, reject) => {\n      axios.post(requestUrl, payload, config).then(res => {\n        resolve(res);\n      }).catch(error => {\n        console.log(error);\n        reject(error);\n      });\n    });\n  };\n\n  const axiosDelete = () => {// return new Promise((resolve, reject) => {\n    //   axios.delete(requestUrl, config).then(res => {\n    //       resolve(res);\n    //   })\n    //   .catch(error => {\n    //       reject(error)\n    //   })\n    // });\n  };\n\n  const axiosPut = () => {\n    return new Promise((resolve, reject) => {\n      axios.put(requestUrl, payload, config).then(res => {\n        resolve(res);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  };\n\n  switch (requestType.toLowerCase()) {\n    case \"post\":\n      return axiosPost();\n\n    case \"get\":\n      return axiosGet();\n\n    case \"delete\":\n      return axiosDelete();\n\n    case \"put\":\n      return axiosPut();\n\n    default:\n      break;\n  }\n};\n\nexport default axiosRequest;","map":{"version":3,"sources":["/Users/user/Desktop/manuel/flenjo/client/src/utils/apiservices.js"],"names":["axios","getAccessToken","axiosRequest","requestType","appendUrl","payload","baseUrl","requestUrl","config","headers","Authorization","axiosGet","Promise","resolve","reject","get","then","res","catch","error","axiosPost","post","console","log","axiosDelete","axiosPut","put","toLowerCase"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,YAAY,GAAG,CAACC,WAAD,EAAcC,SAAd,EAAyBC,OAAzB,KAAqC;AAExD,QAAMC,OAAO,GAAI,qCAAjB,CAFwD,CAED;;AACvD,QAAMC,UAAU,GAAI,GAAED,OAAQ,GAAEF,SAAU,EAA1C;AAEA,MAAII,MAAJ;;AAEA,MAAIP,cAAc,EAAlB,EAAsB;AACpBO,IAAAA,MAAM,GAAG;AACPC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAAST,cAAc,EAAG;AAFnC;AADF,KAAT;AAMD,GAPD,MAOO;AACLO,IAAAA,MAAM,GAAG;AACPC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADF,KAAT;AAKD;;AAED,QAAME,QAAQ,GAAG,MAAM;AACrB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCd,MAAAA,KAAK,CACFe,GADH,CACOR,UADP,EAEGS,IAFH,CAESC,GAAD,IAAS;AACbJ,QAAAA,OAAO,CAACI,GAAD,CAAP;AACD,OAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBL,QAAAA,MAAM,CAACK,KAAD,CAAN;AACD,OAPH;AAQD,KATM,CAAP;AAUD,GAXD;;AAaA,QAAMC,SAAS,GAAG,MAAM;AACtB,WAAO,IAAIR,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCd,MAAAA,KAAK,CACFqB,IADH,CACQd,UADR,EACoBF,OADpB,EAC6BG,MAD7B,EAEGQ,IAFH,CAESC,GAAD,IAAS;AACbJ,QAAAA,OAAO,CAACI,GAAD,CAAP;AACD,OAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAL,QAAAA,MAAM,CAACK,KAAD,CAAN;AACD,OARH;AASD,KAVM,CAAP;AAWD,GAZD;;AAcA,QAAMK,WAAW,GAAG,MAAM,CACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GATD;;AAWA,QAAMC,QAAQ,GAAG,MAAM;AACrB,WAAO,IAAIb,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCd,MAAAA,KAAK,CACF0B,GADH,CACOnB,UADP,EACmBF,OADnB,EAC4BG,MAD5B,EAEGQ,IAFH,CAESC,GAAD,IAAS;AACbJ,QAAAA,OAAO,CAACI,GAAD,CAAP;AACD,OAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBL,QAAAA,MAAM,CAACK,KAAD,CAAN;AACD,OAPH;AAQD,KATM,CAAP;AAUD,GAXD;;AAaA,UAAQhB,WAAW,CAACwB,WAAZ,EAAR;AACE,SAAK,MAAL;AACE,aAAOP,SAAS,EAAhB;;AAEF,SAAK,KAAL;AACE,aAAOT,QAAQ,EAAf;;AAEF,SAAK,QAAL;AACE,aAAOa,WAAW,EAAlB;;AAEF,SAAK,KAAL;AACE,aAAOC,QAAQ,EAAf;;AAEF;AACE;AAdJ;AAgBD,CAzFD;;AA2FA,eAAevB,YAAf","sourcesContent":["import axios from \"axios\";\nimport { getAccessToken } from \"../helpers\";\n\nconst axiosRequest = (requestType, appendUrl, payload) => {\n\n  const baseUrl = `https://flenjodating.herokuapp.com/`; //prone to change based on env\n  const requestUrl = `${baseUrl}${appendUrl}`;\n\n  let config;\n\n  if (getAccessToken()) {\n    config = {\n      headers: {\n        \"Content-type\": \"Application/json\",\n        Authorization: `Bearer ${getAccessToken()}`,\n      },\n    };\n  } else {\n    config = {\n      headers: {\n        \"Content-type\": \"Application/json\",\n      },\n    };\n  }\n\n  const axiosGet = () => {\n    return new Promise((resolve, reject) => {\n      axios\n        .get(requestUrl)\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  };\n\n  const axiosPost = () => {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(requestUrl, payload, config)\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((error) => {\n          console.log(error);\n          reject(error);\n        });\n    });\n  };\n\n  const axiosDelete = () => {\n    // return new Promise((resolve, reject) => {\n    //   axios.delete(requestUrl, config).then(res => {\n    //       resolve(res);\n    //   })\n    //   .catch(error => {\n    //       reject(error)\n    //   })\n    // });\n  };\n\n  const axiosPut = () => {\n    return new Promise((resolve, reject) => {\n      axios\n        .put(requestUrl, payload, config)\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  };\n\n  switch (requestType.toLowerCase()) {\n    case \"post\":\n      return axiosPost();\n\n    case \"get\":\n      return axiosGet();\n\n    case \"delete\":\n      return axiosDelete();\n\n    case \"put\":\n      return axiosPut();\n\n    default:\n      break;\n  }\n};\n\nexport default axiosRequest;\n"]},"metadata":{},"sourceType":"module"}