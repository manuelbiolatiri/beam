{"ast":null,"code":"var CryptoJS=require(\"crypto-js\");export var encryptData=function encryptData(data){return CryptoJS.AES.encrypt(JSON.stringify(data),// process.env.REACT_APP_ENCRYPTION_KEY\n\"flenjo_encrypt\").toString();};export var decryptData=function decryptData(data){if(data){// var bytes = CryptoJS.AES.decrypt(data, process.env.REACT_APP_ENCRYPTION_KEY);\nvar bytes=CryptoJS.AES.decrypt(data,\"flenjo_encrypt\");return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));}};export var getAccessToken=function getAccessToken(){return decryptData(localStorage.getItem(\"access_token\"));};","map":{"version":3,"sources":["/Users/user/Desktop/manuel/flenjo/client/src/helpers.js"],"names":["CryptoJS","require","encryptData","data","AES","encrypt","JSON","stringify","toString","decryptData","bytes","decrypt","parse","enc","Utf8","getAccessToken","localStorage","getItem"],"mappings":"AAAA,GAAIA,CAAAA,QAAQ,CAAGC,OAAO,CAAC,WAAD,CAAtB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,QACzBH,CAAAA,QAAQ,CAACI,GAAT,CAAaC,OAAb,CACEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CADF,CAEE;AACA,gBAHF,EAIEK,QAJF,EADyB,EAApB,CAOP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACN,IAAD,CAAU,CACjC,GAAGA,IAAH,CAAQ,CACJ;AACA,GAAIO,CAAAA,KAAK,CAAGV,QAAQ,CAACI,GAAT,CAAaO,OAAb,CAAqBR,IAArB,CAA2B,gBAA3B,CAAZ,CACA,MAAOG,CAAAA,IAAI,CAACM,KAAL,CAAWF,KAAK,CAACF,QAAN,CAAeR,QAAQ,CAACa,GAAT,CAAaC,IAA5B,CAAX,CAAP,CACH,CAEJ,CAPM,CASP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAC5BN,CAAAA,WAAW,CAACO,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CADiB,EAAvB","sourcesContent":["var CryptoJS = require(\"crypto-js\");\n\nexport const encryptData = (data) =>\n  CryptoJS.AES.encrypt(\n    JSON.stringify(data),\n    // process.env.REACT_APP_ENCRYPTION_KEY\n    \"flenjo_encrypt\"\n  ).toString();\n\nexport const decryptData = (data) => {\n    if(data){\n        // var bytes = CryptoJS.AES.decrypt(data, process.env.REACT_APP_ENCRYPTION_KEY);\n        var bytes = CryptoJS.AES.decrypt(data, \"flenjo_encrypt\");\n        return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    }\n \n};\n\nexport const getAccessToken = () =>\n  decryptData(localStorage.getItem(\"access_token\"));\n"]},"metadata":{},"sourceType":"module"}